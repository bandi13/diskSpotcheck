#!/bin/bash
if [[ $EUID -ne 0 ]]; then
	echo This script must have root priviledges
	exit 1
fi

diskName="/dev/nbd0"
mountLocation="/media/raidx"
testBin="./fst"
now=`date +%Y%m%d_%H%M%S_`
dataDir="results"
mkdir -p ${dataDir}
fileName="${dataDir}/${now}FileSystemResult.csv"
#fs=("ext4" "ext3" "ntfs")
fs=("ext4")

toWrite=("fileSystem" "fileName" "write/read" "time(s)")
printf "%s," "${toWrite[@]}" > ${fileName}

for system in "${fs[@]}"; do
	echo "-------- creating file system ${system} --------"
	if [[ "${system}" == "ntfs" ]]; then
		mkfs.ntfs -f ${diskName} || exit
	elif [[ "${system}" == "ext4" ]]; then
		mkfs.ext4 -F -F ${diskName} || exit
	elif [[ "${system}" == "ext3" ]]; then
		mkfs.ext3 -F -F ${diskName} || exit
	else
		mkfs.${system} ${diskName} || exit
	fi

	echo --- writing ---
	writeTime=`/usr/bin/time -f "%e" sh -c "mount ${diskName} ${mountLocation} && ${testBin} w ${mountLocation} 2>&1 >> ${fileName}.log; umount ${mountLocation}" 2>&1 | tee -a ${fileName}`
	echo Lasted ${writeTime}
	echo --- flushing caches ---
	echo 3 > /proc/sys/vm/drop_caches
	echo --- testing ---
	time=`/usr/bin/time -f "%e" sh -c "mount ${diskName} ${mountLocation} && ${testBin} r ${mountLocation} 2>&1 >> ${fileName}.log; umount ${mountLocation}" 2>&1 | tee -a ${fileName}`
	echo Lasted ${time}
	time=${writeTime} # make first wait a function of the write time
#read multiple time to test the maintenance script
	for i in `seq 1 10`; do
		echo --- flushing caches ---
		echo 3 > /proc/sys/vm/drop_caches
		echo --- waiting ---
		sleep "$(((${time%.*}+1) * 5))s" # Round up
		echo --- testing ---
		time=`/usr/bin/time -f "%e" sh -c "mount ${diskName} ${mountLocation} && ${testBin} r ${mountLocation} 2>&1 >> ${fileName}.log; umount ${mountLocation}" 2>&1 | tee -a ${fileName}`
		echo Lasted ${time}
	done
done
